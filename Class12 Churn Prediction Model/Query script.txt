WITH CUST_TABLE AS (
    SELECT DISTINCT CUST_CODE, FORMAT_DATETIME('%Y-%m', PARSE_DATE('%Y%m%d', CAST(SHOP_DATE AS STRING))) AS MONTH_1
    FROM `earnest-coder-331410.sample_dataset.sample_table1`
    WHERE CUST_CODE IS NOT NULL 
    ORDER BY CUST_CODE, MONTH_1
    ),

-- SELECT * FROM CUST_TABLE;

CUST_DATE AS (
    SELECT DISTINCT CUST_CODE, MONTH_1
    FROM (
        SELECT FORMAT_DATETIME('%Y-%m', master_date) AS MONTH_1
        FROM UNNEST(GENERATE_DATE_ARRAY(
            (SELECT MIN(SHOP_DATE) FROM (
                SELECT PARSE_DATE('%Y%m%d', CAST(SHOP_DATE AS STRING)) AS SHOP_DATE,
                FROM `earnest-coder-331410.sample_dataset.sample_table1`
                WHERE CUST_CODE IS NOT NULL)), 
            (SELECT DATE_ADD(MAX(SHOP_DATE),INTERVAL 1 MONTH) FROM (
                SELECT PARSE_DATE('%Y%m%d', CAST(SHOP_DATE AS STRING)) AS SHOP_DATE,
                FROM `earnest-coder-331410.sample_dataset.sample_table1`
                WHERE CUST_CODE IS NOT NULL)), INTERVAL 1 MONTH)) AS master_date)
    CROSS JOIN
    (SELECT DISTINCT(CUST_CODE),
    FROM `earnest-coder-331410.sample_dataset.sample_table1`
    WHERE CUST_CODE IS NOT NULL)
    ),

-- SELECT * FROM CUST_DATE;

CUST_ALL AS (
    SELECT 
        CUST_DATE.CUST_CODE AS CUST_CODE1,
        CUST_TABLE.CUST_CODE AS CUST_CODE2,
        CUST_DATE.MONTH_1 AS CUST_MONTH1,
        CUST_TABLE.MONTH_1 AS CUST_MONTH2
    FROM CUST_DATE
    LEFT JOIN CUST_TABLE
    ON CUST_DATE.CUST_CODE = CUST_TABLE.CUST_CODE
    AND CUST_DATE.MONTH_1 = CUST_TABLE.MONTH_1
    ORDER BY CUST_TABLE.CUST_CODE, CUST_TABLE.MONTH_1
    ),

-- SELECT DISTINCT * FROM CUST_ALL;

LAG_TABLE AS (
    SELECT *, 
        LAG(CUST_MONTH2) OVER (PARTITION BY CUST_CODE1 ORDER BY CUST_MONTH2) AS BEF_MONTH,
        DATE_DIFF(DATETIME(CONCAT(CUST_MONTH2,"-01")), 
        DATETIME(CONCAT((LAG(CUST_MONTH2) OVER (PARTITION BY CUST_CODE1 ORDER BY CUST_MONTH2)),"-01")), DAY) AS DAYS,
        MIN(CUST_MONTH2) OVER (PARTITION BY CUST_CODE1 ORDER BY CUST_MONTH1 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
        AS MIN_DATE
    FROM CUST_ALL
    ORDER BY CUST_CODE1, CUST_MONTH1
 )

-- SELECT * FROM LAG_TABLE;

SELECT *,
CASE
    WHEN DAYS <= 30 THEN "ACTIVE"
    WHEN DAYS > 30 THEN "REACTIVATE"
    WHEN BEF_MONTH IS NULL AND MIN_DATE IS NOT NULL THEN "NEW"
    WHEN DAYS IS NULL THEN "CHURN"
    ELSE "CHURN"
END AS STATUS_CUST,
FROM LAG_TABLE
WHERE MIN_DATE IS NOT NULL
GROUP BY CUST_CODE1, CUST_MONTH1, CUST_CODE2, CUST_MONTH2, BEF_MONTH, MIN_DATE, DAYS;